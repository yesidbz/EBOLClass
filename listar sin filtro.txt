import React, {Component} from 'react'
import axios from 'axios';
import {URL,TOKEN} from './../../config/config';
import SweetAlert from 'sweetalert-react';
import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';



class Estudiante extends Component {
constructor (props){
    super(props);
    this.state= {
            estudiante :[],
            sweetShow : false ,
            sweetTitle : '',
            sweetText : '',
            sweetType : '',
            
            modal: false,name: '',team :'' ,country: ''


    };

    this.toggle = this.toggle.bind(this);
    this.handleChangeName = this.handleChangeName.bind(this);
    this.handleChangeTeam = this.handleChangeTeam.bind(this);
    this.handleChangeCountry = this.handleChangeCountry.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
}


toggle() {
    this.setState({
      modal: !this.state.modal
    });
  }
  handleChangeName(event) {
    this.setState({name: event.target.value});
  }
  handleChangeTeam(event) {
    this.setState({team: event.target.value});
  }
  handleChangeCountry(event) {
    this.setState({country: event.target.value});
  }

  handleSubmit(event) {
    event.preventDefault();
     }


llamar_listar(){
    setTimeout(() => {
        axios({
            method: 'get',
            url: `${URL}/Estudiante`,
             headers: {
                    "Authorization": "bearer "+TOKEN
                }
            
            }).then(respuesta=>{
                let r = respuesta.data;
                this.setState({
                    estudiante : r.data
                }); 
            }).catch(error=>{
                alert("Error");
            });    
    }, 100)
    
}

componentDidMount() {
    this.llamar_listar();
}


editar(id){
    this.props.history.push(`/Estudiante/modificar/${id}`);
}

detalle(id){
    this.props.history.push(`/Estudiante/detalle/${id}`);
}





cambiar_estado(id){
    axios({
        method: 'delete',
        url: `${URL}/Estudiante/${id}`,
         headers: {
                "Authorization": "bearer "+TOKEN
            }
        }).then(respuesta=>{
            let r = respuesta.data;
               if (r.ok){
                this.setState({
                    sweetShow : true,
                    sweetText : r.mensaje,
                    sweetTitle : "hola",
                    sweetType : "success"

             });
             this.llamar_listar();
               }    
        }).catch(error=>{
            alert("Error");
        });
}





boton_estado(clase, texto, id){

    return (<button onClick={()=>{
        this.cambiar_estado(id);
}} className={clase}>{texto}</button>)
}


listar(){
if(this.state.estudiante.length > 0){
    return this.state.estudiante.map(
        (e ,i)=>
        
        <tr key={i} >
          <td>{e.id}</td>
           <td>{e.documento}</td>
           <td>{e.id_tipodocumento}</td>
           <td>{e.Primer_nombre}</td>
           <td>{e.segundo_nombre}</td>
           <td>{e.primer_apellido}</td>
           <td>{e.segundo_apellido}</td>
           <td>{e.id_municipio}</td>
           <td>{e.id_acudiente}</td>
           <td>{e.estado == 1? 'Activo' : 'Inactivo'}</td>
           <td> 
               { 
                   e.estado == 1?
                   this.boton_estado("btn btn-danger","inactivar",e.id)
                   :
                   this.boton_estado("btn btn-success","Activar",e.id)
               }
               <button onClick={()=>this.editar(e.id)} className="btn btn-primary">Editar</button>

               <button onClick={()=>this.detalle(e.id)}  className="btn btn-warning" >Detalle</button>

              
           </td>
        </tr>
        
        );    
//<Button color="danger" onClick={this.toggle}>Cancel</Button>
}

}



    



cargando(){
    return(<tr>
        <td colSpan="12" className="text-center"><img src="./giphy.gif"/></td>
        </tr>
        )
}

handleClose() {
    this.setState({ show: false });
  }

  handleShow() {
    this.setState({ show: true });
  }
      render(){
           return (
              <div>
              <h1>Estudiantes</h1>
              <table className="table table-bordered">
                 <thead>
                        <tr>
                                <th>Id</th>
                                <th>Documento</th>
                                <th>Tipo documento</th>

                                <th>Primer nombre</th>
                                <th>Segundo nombre</th>
                                <th>Primer apellido</th>
                                <th>Segundo apellido</th>
                                <th>Municipio</th>
                                <th>Codigo del acudiente</th>
                                <th>Estado</th>
                                <th>Opciones</th>

                        </tr>
                </thead>
                <tbody>
                {this.listar()==null?this.cargando():this.listar()}
                </tbody>
              </table>
              <div>
         
        <Modal isOpen={this.state.modal}>
        <form onSubmit={this.handleSubmit}>
          <ModalHeader>Detalles del estudiante</ModalHeader>
          <ModalBody>

          </ModalBody>
          <ModalFooter>
            <Button color="danger" onClick={this.toggle}>Cerrar</Button>
          </ModalFooter>
          </form>
        </Modal>
        </div>

              <SweetAlert
              show={this.state.sweetShow}
              title={this.state.sweetTitle}
              text={this.state.sweetText}
              value={this.state.sweetType}
              onConfirm={() => this.setState({ sweetShow: false })}
            />
  

              </div>
          );        

          
      }

}

export default Estudiante